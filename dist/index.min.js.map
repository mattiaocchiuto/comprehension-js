{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/index.min.js","webpack:///webpack/bootstrap b55a9a1f188012c3ca7d","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_isInputSet","test","indexOf","_parseIfNum","val","isNaN","parseInt","trim","completeArray","arrayString","interval","TypeError","replace","firstElem","lastElem","elems","split","firstElemParams","Array","fill","reduce","acc","valToAdd","result","push","undefined","formatComprehensions","outputExpression","otherArgs","transformationFunction","input","isArray","results","map","predicatesCondition","varName","predicates","predicate","eval","inputSet","rightSide","shift","Error","el","inputSetParams","inputSetFormatted","comprehensions","expression","expressionParams","arg","Object","prototype","toString","callback","thisArg","T","A","k","O","len","length","arguments","kValue","mappedValue","value","t"],"mappings":"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","file":"dist/index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Comprehensions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Comprehensions\"] = factory();\n\telse\n\t\troot[\"Comprehensions\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Comprehensions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Comprehensions\"] = factory();\n\telse\n\t\troot[\"Comprehensions\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function () {\n\t    // Start Polyfill\n\t    if (!Array.isArray) {\n\t        Array.isArray = function (arg) {\n\t            return Object.prototype.toString.call(arg) === '[object Array]';\n\t        };\n\t    }\n\t\n\t    // Production steps of ECMA-262, Edition 5, 15.4.4.19\n\t    // Reference: http://es5.github.io/#x15.4.4.19\n\t    if (!Array.prototype.map) {\n\t\n\t        Array.prototype.map = function (callback, thisArg) {\n\t\n\t            var T, A, k;\n\t\n\t            if (this == null) {\n\t                throw new TypeError(' this is null or not defined');\n\t            }\n\t\n\t            // 1. Let O be the result of calling ToObject passing the |this| \n\t            //    value as the argument.\n\t            var O = Object(this);\n\t\n\t            // 2. Let lenValue be the result of calling the Get internal \n\t            //    method of O with the argument \"length\".\n\t            // 3. Let len be ToUint32(lenValue).\n\t            var len = O.length >>> 0;\n\t\n\t            // 4. If IsCallable(callback) is false, throw a TypeError exception.\n\t            // See: http://es5.github.com/#x9.11\n\t            if (typeof callback !== 'function') {\n\t                throw new TypeError(callback + ' is not a function');\n\t            }\n\t\n\t            // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t            if (arguments.length > 1) {\n\t                T = thisArg;\n\t            }\n\t\n\t            // 6. Let A be a new array created as if by the expression new Array(len) \n\t            //    where Array is the standard built-in constructor with that name and \n\t            //    len is the value of len.\n\t            A = new Array(len);\n\t\n\t            // 7. Let k be 0\n\t            k = 0;\n\t\n\t            // 8. Repeat, while k < len\n\t            while (k < len) {\n\t\n\t                var kValue, mappedValue;\n\t\n\t                // a. Let Pk be ToString(k).\n\t                //   This is implicit for LHS operands of the in operator\n\t                // b. Let kPresent be the result of calling the HasProperty internal \n\t                //    method of O with argument Pk.\n\t                //   This step can be combined with c\n\t                // c. If kPresent is true, then\n\t                if (k in O) {\n\t\n\t                    // i. Let kValue be the result of calling the Get internal \n\t                    //    method of O with argument Pk.\n\t                    kValue = O[k];\n\t\n\t                    // ii. Let mappedValue be the result of calling the Call internal \n\t                    //     method of callback with T as the this value and argument \n\t                    //     list containing kValue, k, and O.\n\t                    mappedValue = callback.call(T, kValue, k, O);\n\t\n\t                    // iii. Call the DefineOwnProperty internal method of A with arguments\n\t                    // Pk, Property Descriptor\n\t                    // { Value: mappedValue,\n\t                    //   Writable: true,\n\t                    //   Enumerable: true,\n\t                    //   Configurable: true },\n\t                    // and false.\n\t\n\t                    // In browsers that support Object.defineProperty, use the following:\n\t                    // Object.defineProperty(A, k, {\n\t                    //   value: mappedValue,\n\t                    //   writable: true,\n\t                    //   enumerable: true,\n\t                    //   configurable: true\n\t                    // });\n\t\n\t                    // For best browser support, use the following:\n\t                    A[k] = mappedValue;\n\t                }\n\t                // d. Increase k by 1.\n\t                k++;\n\t            }\n\t\n\t            // 9. return A\n\t            return A;\n\t        };\n\t    }\n\t\n\t    // Production steps of ECMA-262, Edition 5, 15.4.4.21\n\t    // Reference: http://es5.github.io/#x15.4.4.21\n\t    if (!Array.prototype.reduce) {\n\t        Array.prototype.reduce = function (callback /*, initialValue*/) {\n\t            'use strict';\n\t            if (this == null) {\n\t                throw new TypeError('Array.prototype.reduce called on null or undefined');\n\t            }\n\t            if (typeof callback !== 'function') {\n\t                throw new TypeError(callback + ' is not a function');\n\t            }\n\t            var t = Object(this), len = t.length >>> 0, k = 0, value;\n\t            if (arguments.length == 2) {\n\t                value = arguments[1];\n\t            } else {\n\t                while (k < len && !(k in t)) {\n\t                    k++;\n\t                }\n\t                if (k >= len) {\n\t                    throw new TypeError('Reduce of empty array with no initial value');\n\t                }\n\t                value = t[k++];\n\t            }\n\t            for (; k < len; k++) {\n\t                if (k in t) {\n\t                    value = callback(value, t[k], k, t);\n\t                }\n\t            }\n\t            return value;\n\t        };\n\t    }\n\t    // End Polyfill\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} - test\n\t     * @return {Boolean}\n\t     */\n\t    function _isInputSet(test) {\n\t        return test.indexOf('<-') != -1;\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number|String}\n\t     * @param {Number|String} \n\t     */\n\t    function _parseIfNum(val) {\n\t        return !isNaN(parseInt(val)) ? parseInt(val) : val.trim();\n\t    }\n\t\n\t    // Formatta l'array da una scrittura [1..5] a [1,2,3,4,5]\n\t    // per ora assumiamo array numerici\n\t    function completeArray(arrayString) {\n\t        var interval = 1;\n\t\n\t        if (typeof arrayString != 'string') {\n\t            throw new TypeError('The \"arrayString\" parameter has to be a string.');\n\t        }\n\t\n\t        if (/\\[(.*)\\]/.test(arrayString)) {\n\t            arrayString = arrayString.replace(/\\[(.*)\\]/, '$1');\n\t        }\n\t\n\t        if (/(.*)\\.\\.(.*)/.test(arrayString)) {\n\t            var elems = arrayString.replace(/(.*)\\.\\.(.*)/, '$1||$2').split('||');\n\t            var firstElem;\n\t            var lastElem;\n\t\n\t            if (elems[0].indexOf(',') != -1) {\n\t                var firstElemParams = elems[0].split(',');\n\t\n\t                interval = _parseIfNum(firstElemParams[1]) - _parseIfNum(firstElemParams[0]);\n\t                firstElem = _parseIfNum(firstElemParams[0]);\n\t            }\n\t\n\t            firstElem = _parseIfNum(elems[0]);\n\t            lastElem = _parseIfNum(elems[1]);\n\t\n\t            if (lastElem < firstElem) {\n\t                return [];\n\t            }\n\t\n\t            return Array(lastElem).fill(firstElem).reduce(function (acc, val) {\n\t                var valToAdd = !acc.lastElem ? val : acc.lastElem + interval;\n\t\n\t                if (valToAdd <= lastElem) {\n\t                    acc.result.push(valToAdd);\n\t                    acc.lastElem = valToAdd;\n\t                }\n\t\n\t                return acc;\n\t            }, { result: [], lastElem: undefined }).result;\n\t        } else {\n\t            return arrayString.split(',').reduce(function (acc, val) {\n\t                acc.push(_parseIfNum(val));\n\t\n\t                return acc;\n\t            }, []);\n\t        }\n\t    }\n\t\n\t    function formatComprehensions(outputExpression, otherArgs) {\n\t        var inputSet;\n\t        var varName;\n\t        var rightSide = otherArgs.split(',');\n\t        var predicates = []; // Filtri da applicare.\n\t\n\t        inputSet = rightSide.shift();\n\t\n\t        // Check that an input set has been passed.\n\t        if (!_isInputSet(inputSet)) {\n\t            throw new Error('You have to specify an input set.');\n\t        }\n\t\n\t        // Get the varName.\n\t        varName = inputSet.replace(/(\\w)<-(.*)/, '$1');\n\t\n\t        // Fill the predicates array.\n\t        rightSide.map(function (el) {\n\t            predicates.push(el);\n\t        });\n\t\n\t        /**\n\t         * It take an input array and apply the output-function at the\n\t         * elements respecting the filter functions.\n\t         * @param {Array} - input\n\t         * @return {Array}\n\t         */\n\t        function transformationFunction(input) {\n\t            if (!Array.isArray(input)) {\n\t                throw new TypeError('The input value has to be an Array')\n\t            }\n\t\n\t            var results = [];\n\t\n\t            input.map(function (val) {\n\t                var predicatesCondition = false;\n\t\n\t                this[varName] = val;\n\t\n\t                predicatesCondition = predicates.reduce(function (acc, predicate) {\n\t                    this[varName] = val;\n\t\n\t                    return acc && eval(predicate);\n\t                }, true);\n\t\n\t                if (predicatesCondition) {\n\t                    results.push(eval(outputExpression));\n\t                }\n\t            });\n\t\n\t            return results;\n\t        }\n\t\n\t        if (/(.*)<-\\[(.*)\\]/.test(inputSet)) {\n\t            var inputSetParams = inputSet.replace(/(.*)<-\\[(.*)\\]/, '$1||$2').split('||');\n\t            var inputSetFormatted = completeArray(inputSetParams[1]);\n\t\n\t            return transformationFunction(inputSetFormatted);\n\t        } else {\n\t            return transformationFunction;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {String} expression\n\t     * @return {Function}\n\t     */\n\t    function comprehensions(expression) {\n\t        expression = expression\n\t            .replace(/ +/g, '')\n\t            .replace(/\\[(.*)\\|((.*)(,?).*)\\]/, '$1||$2||$3');\n\t\n\t        var expressionParams = expression.split('||');\n\t\n\t        return formatComprehensions(expressionParams[0], expressionParams[1]);\n\t    }\n\t\n\t    return {\n\t        comprehensions: comprehensions,\n\t        completeArray: completeArray\n\t    };\n\t})();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b55a9a1f188012c3ca7d\n **/","module.exports = (function () {\n    // Start Polyfill\n    if (!Array.isArray) {\n        Array.isArray = function (arg) {\n            return Object.prototype.toString.call(arg) === '[object Array]';\n        };\n    }\n\n    // Production steps of ECMA-262, Edition 5, 15.4.4.19\n    // Reference: http://es5.github.io/#x15.4.4.19\n    if (!Array.prototype.map) {\n\n        Array.prototype.map = function (callback, thisArg) {\n\n            var T, A, k;\n\n            if (this == null) {\n                throw new TypeError(' this is null or not defined');\n            }\n\n            // 1. Let O be the result of calling ToObject passing the |this| \n            //    value as the argument.\n            var O = Object(this);\n\n            // 2. Let lenValue be the result of calling the Get internal \n            //    method of O with the argument \"length\".\n            // 3. Let len be ToUint32(lenValue).\n            var len = O.length >>> 0;\n\n            // 4. If IsCallable(callback) is false, throw a TypeError exception.\n            // See: http://es5.github.com/#x9.11\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            if (arguments.length > 1) {\n                T = thisArg;\n            }\n\n            // 6. Let A be a new array created as if by the expression new Array(len) \n            //    where Array is the standard built-in constructor with that name and \n            //    len is the value of len.\n            A = new Array(len);\n\n            // 7. Let k be 0\n            k = 0;\n\n            // 8. Repeat, while k < len\n            while (k < len) {\n\n                var kValue, mappedValue;\n\n                // a. Let Pk be ToString(k).\n                //   This is implicit for LHS operands of the in operator\n                // b. Let kPresent be the result of calling the HasProperty internal \n                //    method of O with argument Pk.\n                //   This step can be combined with c\n                // c. If kPresent is true, then\n                if (k in O) {\n\n                    // i. Let kValue be the result of calling the Get internal \n                    //    method of O with argument Pk.\n                    kValue = O[k];\n\n                    // ii. Let mappedValue be the result of calling the Call internal \n                    //     method of callback with T as the this value and argument \n                    //     list containing kValue, k, and O.\n                    mappedValue = callback.call(T, kValue, k, O);\n\n                    // iii. Call the DefineOwnProperty internal method of A with arguments\n                    // Pk, Property Descriptor\n                    // { Value: mappedValue,\n                    //   Writable: true,\n                    //   Enumerable: true,\n                    //   Configurable: true },\n                    // and false.\n\n                    // In browsers that support Object.defineProperty, use the following:\n                    // Object.defineProperty(A, k, {\n                    //   value: mappedValue,\n                    //   writable: true,\n                    //   enumerable: true,\n                    //   configurable: true\n                    // });\n\n                    // For best browser support, use the following:\n                    A[k] = mappedValue;\n                }\n                // d. Increase k by 1.\n                k++;\n            }\n\n            // 9. return A\n            return A;\n        };\n    }\n\n    // Production steps of ECMA-262, Edition 5, 15.4.4.21\n    // Reference: http://es5.github.io/#x15.4.4.21\n    if (!Array.prototype.reduce) {\n        Array.prototype.reduce = function (callback /*, initialValue*/) {\n            'use strict';\n            if (this == null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n            var t = Object(this), len = t.length >>> 0, k = 0, value;\n            if (arguments.length == 2) {\n                value = arguments[1];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        };\n    }\n    // End Polyfill\n\n    /**\n     * @private\n     * @param {String} - test\n     * @return {Boolean}\n     */\n    function _isInputSet(test) {\n        return test.indexOf('<-') != -1;\n    }\n\n    /**\n     * @private\n     * @param {Number|String}\n     * @param {Number|String} \n     */\n    function _parseIfNum(val) {\n        return !isNaN(parseInt(val)) ? parseInt(val) : val.trim();\n    }\n\n    // Formatta l'array da una scrittura [1..5] a [1,2,3,4,5]\n    // per ora assumiamo array numerici\n    function completeArray(arrayString) {\n        var interval = 1;\n\n        if (typeof arrayString != 'string') {\n            throw new TypeError('The \"arrayString\" parameter has to be a string.');\n        }\n\n        if (/\\[(.*)\\]/.test(arrayString)) {\n            arrayString = arrayString.replace(/\\[(.*)\\]/, '$1');\n        }\n\n        if (/(.*)\\.\\.(.*)/.test(arrayString)) {\n            var elems = arrayString.replace(/(.*)\\.\\.(.*)/, '$1||$2').split('||');\n            var firstElem;\n            var lastElem;\n\n            if (elems[0].indexOf(',') != -1) {\n                var firstElemParams = elems[0].split(',');\n\n                interval = _parseIfNum(firstElemParams[1]) - _parseIfNum(firstElemParams[0]);\n                firstElem = _parseIfNum(firstElemParams[0]);\n            }\n\n            firstElem = _parseIfNum(elems[0]);\n            lastElem = _parseIfNum(elems[1]);\n\n            if (lastElem < firstElem) {\n                return [];\n            }\n\n            return Array(lastElem).fill(firstElem).reduce(function (acc, val) {\n                var valToAdd = !acc.lastElem ? val : acc.lastElem + interval;\n\n                if (valToAdd <= lastElem) {\n                    acc.result.push(valToAdd);\n                    acc.lastElem = valToAdd;\n                }\n\n                return acc;\n            }, { result: [], lastElem: undefined }).result;\n        } else {\n            return arrayString.split(',').reduce(function (acc, val) {\n                acc.push(_parseIfNum(val));\n\n                return acc;\n            }, []);\n        }\n    }\n\n    function formatComprehensions(outputExpression, otherArgs) {\n        var inputSet;\n        var varName;\n        var rightSide = otherArgs.split(',');\n        var predicates = []; // Filtri da applicare.\n\n        inputSet = rightSide.shift();\n\n        // Check that an input set has been passed.\n        if (!_isInputSet(inputSet)) {\n            throw new Error('You have to specify an input set.');\n        }\n\n        // Get the varName.\n        varName = inputSet.replace(/(\\w)<-(.*)/, '$1');\n\n        // Fill the predicates array.\n        rightSide.map(function (el) {\n            predicates.push(el);\n        });\n\n        /**\n         * It take an input array and apply the output-function at the\n         * elements respecting the filter functions.\n         * @param {Array} - input\n         * @return {Array}\n         */\n        function transformationFunction(input) {\n            if (!Array.isArray(input)) {\n                throw new TypeError('The input value has to be an Array')\n            }\n\n            var results = [];\n\n            input.map(function (val) {\n                var predicatesCondition = false;\n\n                this[varName] = val;\n\n                predicatesCondition = predicates.reduce(function (acc, predicate) {\n                    this[varName] = val;\n\n                    return acc && eval(predicate);\n                }, true);\n\n                if (predicatesCondition) {\n                    results.push(eval(outputExpression));\n                }\n            });\n\n            return results;\n        }\n\n        if (/(.*)<-\\[(.*)\\]/.test(inputSet)) {\n            var inputSetParams = inputSet.replace(/(.*)<-\\[(.*)\\]/, '$1||$2').split('||');\n            var inputSetFormatted = completeArray(inputSetParams[1]);\n\n            return transformationFunction(inputSetFormatted);\n        } else {\n            return transformationFunction;\n        }\n    }\n\n    /**\n     * @param {String} expression\n     * @return {Function}\n     */\n    function comprehensions(expression) {\n        expression = expression\n            .replace(/ +/g, '')\n            .replace(/\\[(.*)\\|((.*)(,?).*)\\]/, '$1||$2||$3');\n\n        var expressionParams = expression.split('||');\n\n        return formatComprehensions(expressionParams[0], expressionParams[1]);\n    }\n\n    return {\n        comprehensions: comprehensions,\n        completeArray: completeArray\n    };\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}